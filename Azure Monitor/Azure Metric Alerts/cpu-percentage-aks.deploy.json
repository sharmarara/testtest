{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sourceId": {
            "type": "string",
            "metadata": {
                "description": "Resource ID of the Log Analytics workspace."
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Location for the alert. Must be the same location as the workspace."
            }
        },
        "actionGroupId": {
            "type": "string",
            "metadata": {
                "description": "The ID of the action group that is triggered when the alert is activated."
            }
        },
        "alertname": {
            "type": "string",
            "metadata": {
                "description": "the name of the alert"
            }
        },
        "isEnabled": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Specifies whether the alert is enabled"
            }
        },
        "windowSizeinminutes": {
            "type": "string",
            "defaultValue": "5",

            "metadata": {
                "description": "Period of time used to monitor alert activity based on the threshold. Must be between one minute and one day."
            }
        },
        "evaluationFrequencyinminutes": {
            "type": "string",
            "defaultValue": "5",
            "metadata": {
                "description": "how often the metric alert is evaluated"
            }
        },
        "alertSeverity": {
            "type": "int",
            "defaultValue": 3,
            "allowedValues": [
                0,
                1,
                2,
                3,
                4
            ],
            "metadata": {
                "description": "Severity of alert {0,1,2,3,4}"
            }
        },
        "triggeroperator": {
            "type": "string",
            "allowedValues": [
                "Equals",
                "NotEquals",
                "GreaterThan",
                "GreaterThanOrEqual",
                "LessThan",
                "LessThanOrEqual"
            ],
            "metadata": {
                "description": "threshold trigger Operator comparing the current value with the threshold value."
            }
        },
        "metrictriggeroperator": {
            "type": "string",
            "allowedValues": [
                "Equal",                
                "GreaterThan",
                "GreaterThanOrEqual",
                "LessThan",
                "LessThanOrEqual"
            ],
            "metadata": {
                "description": "Metric trigger operator comparing the current value with the threshold value."
            }
        },
        "thresholdvalue": {
            "type": "string",
            "metadata": {
                "description": "The threshold value at which the alert is activated."
            }
        },
        "metrictriggertype": {
            "type": "string",
            "defaultValue": "Consecutive",
            "allowedValues": [
                "Consecutive",
                "Total"
            ],
            "metadata": {
                "description": "The threshold value at which the alert is activated."
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Insights/scheduledQueryRules",
            "name": "[parameters('alertname')]",
            "apiVersion": "2018-04-16",
            "location": "[parameters('location')]",
            "properties": {
                "description": "[parameters('alertname')]",
                "enabled": "[parameters('isEnabled')]",
                "source": {
                    "query": "let endDateTime = now();\nlet startDateTime = ago(1h);\nlet trendBinSize = 5m;\nlet capacityCounterName = 'cpuCapacityNanoCores';\nlet usageCounterName = 'cpuUsageNanoCores';\nKubeNodeInventory\n| where TimeGenerated < endDateTime\n| where TimeGenerated >= startDateTime\n// cluster filter would go here if multiple clusters are reporting to the same Log Analytics workspace\n| distinct ClusterName, Computer\n| join hint.strategy=shuffle (\n  Perf\n  | where TimeGenerated < endDateTime\n  | where TimeGenerated >= startDateTime\n  | where ObjectName == 'K8SNode'\n  | where CounterName == capacityCounterName\n  | summarize LimitValue = max(CounterValue) by Computer, CounterName, bin(TimeGenerated, trendBinSize)\n  | project Computer, CapacityStartTime = TimeGenerated, CapacityEndTime = TimeGenerated + trendBinSize, LimitValue\n) on Computer\n| join kind=inner hint.strategy=shuffle (\n  Perf\n  | where TimeGenerated < endDateTime + trendBinSize\n  | where TimeGenerated >= startDateTime - trendBinSize\n  | where ObjectName == 'K8SNode'\n  | where CounterName == usageCounterName\n  | project Computer, UsageValue = CounterValue, TimeGenerated\n) on Computer\n| where TimeGenerated >= CapacityStartTime and TimeGenerated < CapacityEndTime\n| project ClusterName, Computer, TimeGenerated, UsagePercent = UsageValue * 100.0 / LimitValue\n| summarize AggregatedValue = avg(UsagePercent) by bin(TimeGenerated, trendBinSize), ClusterName\n",
                    "dataSourceId": "[parameters('sourceId')]",
                    "queryType": "ResultCount"
                },
                "schedule": {
                    "frequencyInMinutes": "[parameters('evaluationFrequencyinminutes')]",
                    "timeWindowInMinutes": "[parameters('windowSizeinminutes')]"
                },
                "action": {
                    "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.Microsoft.AppInsights.Nexus.DataContracts.Resources.ScheduledQueryRules.AlertingAction",
                    "severity": "[parameters('alertSeverity')]",
                    "criteria": [
                        {
                            "dimensions": [
                                {
                                    "name": "ClusterName",
                                    "operator": "Include",
                                    "values": "*"
                                 }
                            ]
                         }
                    ],
                    "aznsAction": {
                        "actionGroup":  "[array(parameters('actionGroupId'))]"
                    },
                    "trigger": {
                        "thresholdOperator": "[parameters('triggeroperator')]",
                        "threshold": "[parameters('thresholdvalue')]",
                        "metricTrigger": {
                            "thresholdOperator": "[parameters('metrictriggeroperator')]",
                            "threshold": 0,
                            "metricTriggerType": "[parameters('metrictriggertype')]",
                            "metricColumn": "Computer"

                        }
                    }
                }
            }
        }

    ]
}